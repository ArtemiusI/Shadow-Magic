COPY ~%MOD_FOLDER%/shadowmonk~ ~override~

LAF ADD_KIT_EX
  INT_VAR
    // Mage	= 1
	// Fighter = 2
	// Cleric = 3
	// Thief = 4
	// Bard = 5
	// Paladin = 6
	// Fighter/Mage = 7
	// Fighter/Cleric = 8
	// Fighter/Thief = 9
	// Fighter/Mage/Thief = 10
	// Druid = 11
	// Ranger = 12
	// Mage/Thief = 13
	// Cleric/Mage = 14
	// Cleric/Thief = 15
	// Fighter/Druid = 16
	// Fighter/Mage/Cleric = 17
	// Cleric/Ranger = 18
	// Sorcerer = 19
	// Monk = 20
	// Shaman = 21
    kit_class     = 20
	
    mixed         = RESOLVE_STR_REF(~Shadow Monk~)
	
    lower         = RESOLVE_STR_REF(~shadow monk~)
	
    help          = RESOLVE_STR_REF(~SHADOW MONK: Little is known about the secretive order of shadow monks, other than the fact that they draw upon the power of the Shadow Plane to wield dark ki. They are masterful assassins, manipulating powerful illusions to their advantage and skilled at striking from the shadows, but their ritualistic training has taken a toll on their physical stamina.

Advantages:
– +1 bonus to Dexterity.
– Gains the Darkvision innate ability.

DARKVISION: The shadow monk is gifted with the ability to see in the dark even better than in light, permanently gaining infravision and immunity to blindness.

– Gains the Life-Drain innate ability.

LIFE-DRAIN: Shadow monks channel the power of the Shadow Plane into their fists, gaining bonus effects based off of their level.

1st – 9th level: Drains 1 hit point on hit.
10th – 19th level: Drains 2 hit points and lowers target's strength by 1 for 2 rounds (save vs. death to avoid strength drain)
20th level onwards: Drains 3 hit points, lowers target's strength by 1 and 20% chance to drain one level permanently on hit

– Has a backstab multiplier of x2. Increases to x3 at 11th level and x4 at 21st level.

– 3rd level: May use the Shadow Pool ability.

SHADOW POOL: Shadow monks wield the power of the Shadow Plane and can manipulate it in order to cast a limited amount of Shadow Magic. The shadow monk must first spend one round drawing energy from the Shadow Weave then cast the spell. The shadow monk's concentration may be disrupted during the channeling or the casting time. The channeling time decreases as the shadow monk increases in level.

Level 1 (3rd, 6th, 9th, 12th levels): Shadow Missile, Blinding Darkness, Shadow Veil, Decoy
Level 2 (7th, 10th, 13th, 16th levels): Dark Mirage, Black Mist, Ghostly Visage, Shadow Walk
Level 3 (11th, 17th, 23rd levels): Shadowblast, Lifedrinker Touch, Shadow Comets, Impose
Level 4 (15th, 21st, 27th levels): Fireshield (Shadow), Shadeskin, Summon Shadow, Shar's Blessing

– 5th level: May cast Shadowstep once per day. Gains an additional use every 5 levels thereafter.

SHADOWSTEP: Step into the Shadow Plane and move for 7 seconds while others are frozen in time. The shadow monk cannot attack or use spells while in the Shadow Plane.

– 12th level: May cast Shadow Door once per day. Gains additional uses at 16th and 20th level.
– 15th level: May use the Deathstrike ability once per day.

DEATHSTRIKE: The shadow monk teleports to a chosen target and turns invisible for one round. <PRO_HISHER> next attack within one round is a guaranteed critical hit and drains six levels from the target.

Disadvantages:
– Hit Die: d6
– -2 penalty to Strength.
– -4 penalty to Constitution.
– Alignment restricted to non-lawful and non-good.
– Uses the shadowdancer's high level abilities table instead of the fighter's, with the exclusion of Use Any Item.
– May not use the Lay On Hands ability.
– May not use the Stunning Blow ability.
– May not use the Quivering Palm ability.~)
	
    briefdesc     = RESOLVE_STR_REF(~SHADOW MONK: Little is known about the secretive order of shadow monks, other than the fact that they draw upon the power of the Shadow Plane to wield dark ki. They are masterful assassins, manipulating powerful illusions to their advantage and skilled at striking from the shadows, but their ritualistic training has taken a toll on their physical stamina.~)
  STR_VAR
    kit_name      = ~C0SMONK~
	
    unusable      = ~0x00004000~
    // clasweap      = ~1 1 1 1 1 1 1 1~
	//                                       T   S           F   Q             S S
	//                                       W   C           L   U             W I
	//                               B L S   O   I   W       A   A             O N
	//                               A O H   H   M   A       I   R C   S       R G
	//               L S           M S N O   A   I   R     H L   T R L H     2 D L 2
	//               _ _       S   I T G R   N K T D H     A M   E O O O     H A E W
	//               S S   S B P   S A S T   D A A A A   S L O   R S N R   S A N W E
	//               W W   P L I   S R W S   E T R G M C P B R M S S G T D L N D E A
	//               O O B E U K A I D O W A D A W G M L E E N A T B B B A I D S A P
	//               R R O A N E X L S R O X S N A E E U A R I C A O O O R N E H P O
	//               D D W R T D E E W D R E W A K R R B R D N E F W W W T G D I O N
    //weapprof      = ~0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0~
	
    abclasrq      = ~0 14 5 0 9 0~
	
    abclsmod      = ~-2 1 -4 0 0 0~
	
    // abdcdsrq      = ~0 0 0 0 0 0~
	
    // abdcscrq      = ~15 0 0 0 0 0~
	
	//               L L L N N N C C C
	//               G N E G N E G N E
    alignmnt      = ~0 0 0 0 1 1 0 1 1~
	
    // dualclas      = ~0 1 1 1 1 0~
	
    luabbr        = ~C0SM~
	
    stweap        = ~* * HELM19 BAG23 RING06 RING29 CLCK02 BOOT01 AMUL19 BRAC16 BELT06 AROW11,40 BULL03,40 BOLT06,40 POTN52,5 POTN4,2 POTN14,5 * * *~
	
    clab_path     = ~override/C0SMONK.2da~
	
    // kittable      = ~K_F_H K_F_D K_F_G K_F_E K_F_HE K_F_HL K_F_HO~
	
	// base_class = 
	
	// clab_base_f = 
	
	// clab_base_p = 
	
	// clab_base_d = 
	
	// clab_base_r = 
	
	// clab_base_m = 
	
	// clab_base_t = 
	
    // clsrcreq      = ~1 1 1 1 1 1 1~
	
    // clswpbon      = ~1 0 2~
	
    hpclass       = ~HPPR~
	
    // numwslot      = ~4~
	
	clascolr = ~27 136 119 21 187~
	
	// clasiskl = ~0 0 0 0 0 0 0~
	
	// clasthac = ~0~
	
	// thiefscl = ~0 0 0 0 0 0 0 0~
	
	backstab = ~2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4~
	
	sneakatt = ~2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4~
	
	crippstr = ~0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4~
	
	// thiefskl
	
	// traplimt = ~6~
	
    bdstweap      = ~* * * * RING06 * * * * BRAC09 BELT02 * BULL02,40 * POTN08,5 POTN17,3 * * DAGG02 SLNG02~
  RET
    kit_id
END

COPY_EXISTING ~c0sa101.spl~ ~override/c0sm101.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa103.spl~ ~override/c0sm103.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa107.spl~ ~override/c0sm107.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa110.spl~ ~override/c0sm110.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa201.spl~ ~override/c0sm201.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa206.spl~ ~override/c0sm206.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa208.spl~ ~override/c0sm208.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa211.spl~ ~override/c0sm211.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa302.spl~ ~override/c0sm302.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa304.spl~ ~override/c0sm304.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa306.spl~ ~override/c0sm306.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa308.spl~ ~override/c0sm308.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa401.spl~ ~override/c0sm401.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa402.spl~ ~override/c0sm402.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa404.spl~ ~override/c0sm404.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~c0sa405.spl~ ~override/c0sm405.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~C0SMDRN2.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      check_globals = 1
      check_headers = 1
      match_opcode = 139 // display string
      match_parameter1 = 1
 parameter1 = RESOLVE_STR_REF (~One Level Drained~)
  END

COPY_EXISTING ~C0MNKHLA.spl~ ~override~
SAY NAME1 ~One With Shadows~
SAY NAME2 ~One With Shadows~
SAY UNIDENTIFIED_DESC ~One With Shadows
The shadow monk's training has allowed <PRO_HIMHER> to become a being of both the Prime Material Plane and the Shadow Plane, giving <PRO_HIMHER> 20% resistance to physical damage, +2 bonus to all saves, -2 bonus to armor class and immunity to Imprisonment and Time Stop.~

COPY_EXISTING ~C0SMONK1.spl~ ~override~
SAY NAME1 ~Shadow Pool I~
SAY NAME2 ~Shadow Pool I~
SAY UNIDENTIFIED_DESC ~Shadow Pool I

The shadow monk channels the power of the Shadow Weave to cast one of the following 1st level Shadow Weave spells: Shadow Missile, Blinding Darkness, Shadow Veil, Decoy.~

COPY_EXISTING ~C0SMONK2.spl~ ~override~
SAY NAME1 ~Shadow Pool II~
SAY NAME2 ~Shadow Pool II~
SAY UNIDENTIFIED_DESC ~Shadow Pool II

The shadow monk channels the power of the Shadow Weave to cast one of the following 2nd level Shadow Weave spells: Dark Mirage, Black Mist, Ghostly Visage, Shadow Walk.~

COPY_EXISTING ~C0SMONK3.spl~ ~override~
SAY NAME1 ~Shadow Pool III~
SAY NAME2 ~Shadow Pool III~
SAY UNIDENTIFIED_DESC ~Shadow Pool III

The shadow monk channels the power of the Shadow Weave to cast one of the following 3rd level Shadow Weave spells: Shadowblast, Lifedrinker Touch, Shadow Comets, Impose.~

COPY_EXISTING ~C0SMONK4.spl~ ~override~
SAY NAME1 ~Shadow Pool IV~
SAY NAME2 ~Shadow Pool IV~
SAY UNIDENTIFIED_DESC ~Shadow Pool IV

The shadow monk channels the power of the Shadow Weave to cast one of the following 4th level Shadow Weave spells: Fireshield (Shadow), Shadeskin, Summon Shadow, Shar's Blessing.~

COPY_EXISTING ~spwi505.spl~ ~override/C0SMONK5.spl~
WRITE_SHORT 0x1C 4 
WRITE_LONG 0x34 1 
READ_LONG 0x64 "offset_abil"
READ_SHORT 0x68 "num_abil"
READ_ASCII ("%offset_abil%" + 0x04) "bam" 
WRITE_EVALUATED_ASCII 0x3A "%bam%" 
WHILE (0 < "%num_abil%")
BEGIN
WRITE_SHORT (("%offset_abil%" + 0x02) + (("%num_abil%" - 1) * 0x28)) 4 
SET "num_abil" = ("%num_abil%" - 1)
END

COPY_EXISTING ~C0SMSP6A.spl~ ~override~
  LPF ALTER_EFFECT
    INT_VAR
      check_globals = 1
      check_headers = 1
      match_opcode = 139 // display string
      match_parameter1 = 1
 parameter1 = RESOLVE_STR_REF (~Six Levels Drained~)
  END
COPY_EXISTING ~C0SMONK6.spl~ ~override~
SAY NAME1 ~Deathstrike~
SAY NAME2 ~Deathstrike~
SAY UNIDENTIFIED_DESC ~Deathstrike
The shadow monk teleports to a chosen target and turns invisible for one round. <PRO_HISHER> next attack within one round is a guaranteed critical hit and drains six levels from the target.~