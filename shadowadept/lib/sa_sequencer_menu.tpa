
	//	UI-based Spell Learning tool for Sorcerers/Shamans
	//	v0.1
	DEFINE_ACTION_FUNCTION	SETUP_SEQUENCER_MENU	BEGIN
		ACTION_IF	NOT	FILE_EXISTS_IN_GAME	~M_SQMENU.LUA~	BEGIN
			COPY_EXISTING	~UI.MENU~	override
				REPLACE_TEXTUALLY	~function[ %TAB%]+filterContingencyMageSpells()~	~function Redirect_filterContingencyMageSpells()~
				REPLACE_TEXTUALLY	~function[ %TAB%]+magePageInfo()~	~function Redirect_magePageInfo()~
				REPLACE_TEXTUALLY	~mageBookEnabled[ %TAB%]+==[ %TAB%]+true~	~((mageBookEnabled == true) or (bookMode == 1))~
				REPLACE_TEXTUALLY	~mageBookEnabled[ %TAB%]+==[ %TAB%]+false~ ~mageBookEnabled == false and bookMode == 0~
<<<<<<<< .../inlined.bam
>>>>>>>>
			OUTER_SPRINT	bam ~434D414220203156000007AE93ED9C78551373DF4A4FC71458D9247F924A05B4E34B68469B09B04ED909B36C6D34D934D376CB429B498DB4A69B69B5A46927497487483F505B42987E5378463EA38E8C3A0F883900753E0A0661D17D4707C46619D054195828207F67AC9C70384FF8CBECEF9D9ECE73F7BDD9CF67BDEDF8E3EB76FB6A112B602805CAB2900047C69E01158E1336140AA3EB5801AA8156504D67450A02D65A89350029C53286C7137B5C54055027E89DCE1F895CEF2BDB0D00DACF4F43CEFA9F9017F91C8E01793D5E03BA9E4E17DD8EC70F3BD9B98506DFC3D03615752BD8C55C6E8D531873403942AA180AF5BBA184BF9BC4E19FC1F870FB89285803F05ED7803E52260BFFB7DEE27FF451CCF02F6F89DDC126BB5CE0DFD2D2A6C1AFB45150EBDA361B0ABE33B3047CA5D2E1F741E4FA1207C06E10FC704BEFA64C12E50AFB5C2521E7CBCA0B835A14EB3C2417D707C41647E2A2A0C6DFB7F09B057FBC5D587BEDF437A095F673BC1BDD34EC114B2E4F848C45DF987D5A81292B3DDE0E8257B841987B9696B6EA0963FA74879C2F1A3017055DC702DA1D73075E635F7D0F346812C25750C0E56095EFDE701AE82E5941DF35C68EC16821EBCCB541EFB5B788FD0A077955418090699ED6065FB121FC612121EA7DA812FCDE6C611757546C1EE04FED077ED5DAEC12DEA077412912D3B3040B7FAB6C603763065D82587452A0F39691D1819D3EE3E0DB9CA8C185E1701BFBFA7047E39B9A094CAF7DC73F34EA2EC0C0AF75E8827EC78B1026F161595067C46E4F0639C7C716FC87CD09E10DFE3130FFC12DAEC5379FF69DB526B3DDCE3071D1A5C2566EC308B8B460EDD6284AD6D6DBA936AB73978F68634228FBA92AB532B6F586265429D7FB1D1D91CBBF018D9D56B6528FB41D0CB90BA9D03D4DC86DF84760A6EADE6751C0104C47A36BAD3B061A39D730DDB4BB1BAF7DB51A7BE66747A7A42148E74A297BC91B0DAEAFB9BE1EB566CBBF6681C907945CF23E91B62334998F7DB4ECA2C68CCBBFBEA06433D7B758B123643F3DB45CED060FAC314E1DE178458B11BB776B81B1FAC347111E2C44E196C22D16CD649AC48C5C617D3189631E302BD8889A152A85A2A247D2A6747522D60E9D89F12346649A8650D64DFD262A22684C592CB2E6247530C7D189CD9B618CE1890BA42B0061990DDAE29967319CD9BCC94B29F927A8C9AC4EAF5EE807F705D2954B615219E6769D9673BCF98DC25ACD9AE31F75198454A7ABEBEE0B817A4CCCCE0820A74899E927466BA8C99C4256BD8306946845491F6FCE5E643D2593D279A6EFF6CD4CBA57AB9DAB556508D96BAAD248164CAFF21051A7BCD49B18A6C362D08A652AB493CED74773E3C2853D32050BA9D76B43B69DB3BCB1B01DF76D13B4FC076D679AA3B945928ACE422E92D5AB995F14ECD9CF02C920DB49678E46DBBD7EAA56D4A91618B8231B98A20A9E79629F131DAFC5F46B9BA7D443DA5DD6D31D6E2C51F027E592CE6502962CB852737C27597A36EF308F4E7A573A572698B0783CC72AC31BA8B9BCA3F7B1E777163442F9DA6371938A374AE5A34E3889CED72305FD8A97B848B441D8B9397A43886E9D3FD63134C8EE0AF45F50762B2689A42E9E7165BA5A7641796428A5089E6D82E1962260EC6A3CBCB0B1DCEAF4C01388CB738C43AD08DBA3A54DA43711BA20587D5438BFC06A21906A921328DB477CE0EC62E98FB67A8694215D48C8FA0171453E7AB5A56D8CDD8BC65AB701D9996FFD7EB12373FCE7FFA38A192E2A0DBD31CF54D8468AEF8FDF7E7149D36621A14DFAD54A755D71524AC97E4CDFAD751C00E621B248C15C6D3FF63FC50000BE8D~
			COPY	~.../inlined.bam~	~override\M_SQMENU.BAM~
				INSERT_BYTES	0	0x528
				FOR	(i = 0;	i < 0x528; i += 4)	BEGIN
					INNER_PATCH	~%bam%~	BEGIN	READ_ASCII	(i * 2)	long (8)	END
					WRITE_LONG	i	EVAL ~0x%long%~
				END
				DELETE_BYTES	0x526 2
			CREATE	SPL	~M_SQMENU~	WRITE_ASCII	0x3a	~M_SQMENU~
			COPY_EXISTING	~BGEE.LUA~	~override\M_SQMENU.LUA~	DELETE_BYTES	0	SOURCE_SIZE
			APPEND	~M_SQMENU.LUA~	~~~~~
	function magePageInfo()
		local text = ''
		if bookMode == 1 then
			if type(SequencerMenu[contingencyResRef]) == 'function' then
			if SequencerMenuKnown == nil then;	SequencerMenuKnown = 0;	end
			if SequencerMenuTotal == nil then;	SequencerMenuTotal = 0;	end
				text = t("SPELLS_LABEL") .. " :" .. SequencerMenuKnown .. "/" .. SequencerMenuTotal
			end
		else
			text = Redirect_magePageInfo()
		end
		return text
	end
	function filterContingencyMageSpells()
		bookSpells = Redirect_filterContingencyMageSpells()
		if type(SequencerMenu[contingencyResRef]) == 'function' then
			SequencerMenu[contingencyResRef]()
		else
			SequencerMenu['DEFAULT']()
		end
		return bookSpells
	end
	SequencerMenu = {}
	SequencerMenu['DEFAULT'] = function()
		local temp = {}
		for k,v in pairs (bookSpells) do
			if v.level == currentSpellLevel - 1 then
				table.insert(temp, v)
			end
		end
		bookSpells = temp
	end~~~~~
		END
	END
		DEFINE_ACTION_FUNCTION	CREATE_SEQUENCER_MENU
		INT_VAR	class = 0	exclude = 0	maxlevel = ~-1~	multilist = 0	tip = ~-1~	name = ~-1~	desc = ~-1~
		STR_VAR	resref = ~~	icon = ~~	title = ~~	action = ~~	spelltable = ~~	function = ~~
	BEGIN
		LAF	SETUP_SEQUENCER_MENU	END
		<<<<<<<< .../inlined.2da
2DA V1.0
****
            	     ResRef   Type>>>>>>>>
		ACTION_IF	STRING_LENGTH ~%resref%~ > 7	BEGIN	FAIL	~Resource filename cannot be more than 7 characters long.~	END
		APPEND	~BGEE.LUA~	~mageBookStrings['%resref%X'] = {tip = %tip%, title = '%resref%_SEQUENCER_TITLE', action = "%resref%_SEQUENCER_LABEL"}~
		APPEND	~L_%EE_LANGUAGE%.LUA~	~uiStrings['%resref%_SEQUENCER_TITLE'] = "%title%"~
		APPEND	~L_%EE_LANGUAGE%.LUA~	~uiStrings['%resref%_SEQUENCER_LABEL'] = "%action%"~
		ACTION_IF	GAME_IS	~iwdee~	BEGIN	OUTER_SPRINT	currentLevel ~contingencySpellLevel~	END	ELSE	BEGIN	OUTER_SPRINT	currentLevel ~currentSpellLevel~	END
		ACTION_IF	class = 1	BEGIN
			OUTER_SPRINT	prefix ~C0SA~
			ACTION_IF (maxlevel > 9) OR (maxlevel < 0)	BEGIN	OUTER_SET	maxlevel = 9	END
			ACTION_IF	~%spelltable%~ STRING_EQUAL ~~	BEGIN
				OUTER_SPRINT	spelltable ~SPLSRCKN_BACKUP~
				ACTION_IF	!FILE_EXISTS_IN_GAME	~SPLSRCKN_BACKUP.2da~	BEGIN
					COPY_EXISTING	~SPLSRCKN.2DA~	~override\SPLSRCKN_BACKUP.2da~
					COPY_EXISTING	~SPLSRCKN.2DA~	override
						COUNT_2DA_COLS	cols	COUNT_2DA_ROWS	cols	rows
						FOR	(i = 0; i < rows; ++i)	BEGIN	FOR	(j = 1; j < cols; ++j)	BEGIN	SET_2DA_ENTRY_LATER	~SET_SPLSRCKN~ i j 0	END	END
						SET_2DA_ENTRIES_NOW	~SET_SPLSRCKN~ cols
					BUT_ONLY
				END
			END
		END
		COPY	~.../inlined.2da~	~override/%resref%X.2da~
		CREATE	SPL	~%resref%~	WRITE_LONG	NAME1	name	WRITE_LONG	UNIDENTIFIED_DESC	desc	WRITE_LONG	0x34	1	WRITE_SHORT	0x1c	4	WRITE_LONG	0x18	0x0201c000
			WRITE_SHORT	0x68	1	WRITE_LONG	0x6a	(0x72 + 0x28)	INSERT_BYTES	0x72	0x28
			LPF	ALTER_SPELL_HEADER	INT_VAR	location = 4	projectile = 47	target = 7	min_level = 1	STR_VAR	icon	END
			LPF	ADD_SPELL_EFFECT	INT_VAR	opcode = 321	target = 1	STR_VAR	resource =	EVAL ~%resref%X~	END
			LPF	ADD_SPELL_EFFECT	INT_VAR	opcode = 177	target = 9	parameter2 = 2	STR_VAR	resource =	EVAL ~%resref%X~	END
			LPF	ADD_SPELL_EFFECT	INT_VAR	opcode = 146	target = 9	parameter2 = 1	STR_VAR	resource =	EVAL ~%resref%D~	END
		CREATE	SPL	~%resref%D~	WRITE_LONG	0x34	1	WRITE_SHORT	0x68	1	WRITE_LONG	0x6a	(0x72 + 0x28)	INSERT_BYTES	0x72	0x28	WRITE_SHORT	0x98	47
			LPF	ADD_SPELL_EFFECT	INT_VAR	opcode = 258	target = 2	STR_VAR	resource =	EVAL ~%resref%X~	END
		CREATE	EFF	~%resref%X~	WRITE_LONG	0x10	257	WRITE_LONG	0x1c	9	WRITE_LONG	0x20	1	WRITE_SHORT	0x2c	100	WRITE_ASCIIE	0x94	~%resref%X~
		COPY_EXISTING	~HIDESPL.2DA~	override
			COUNT_2DA_COLS	cols	READ_2DA_ENTRIES_NOW	~READ_HIDESPL~	cols
			FOR	(i = 0; i < READ_HIDESPL; ++i)	BEGIN
				READ_2DA_ENTRY_FORMER	~READ_HIDESPL~ i 1	value
				READ_2DA_ENTRY_FORMER	~READ_HIDESPL~ i 0	res
				TEXT_SPRINT	$hidden(~%res%~) ~%value%~
			END
		BUT_ONLY
		OUTER_FOR	(i = 1; i <= maxlevel; ++i)	BEGIN
			COPY_EXISTING_REGEXP	~^\(%prefix%%i%\([0-4][1-9]\|10\|20\|30\|40\)\)\.spl$~	~override/\1L.spl~
				PATCH_IF	(!VARIABLE_IS_SET	$hidden(~%SOURCE_RES%~)) OR ($hidden(~%SOURCE_RES%~)	STRING_EQUAL ~0~)	BEGIN
					PATCH_IF	!FILE_EXISTS_IN_GAME	~%DEST_FILE%~	BEGIN
						WRITE_LONG	0x18	0	LPF	ALTER_SPELL_HEADER	INT_VAR	range = 32767	projectile = 1	END
						LPF	DELETE_EFFECT	END	LPF	ADD_SPELL_EFFECT	INT_VAR	opcode = 171	target = 1	STR_VAR	resource = EVAL ~%SOURCE_RES%~	END
						LPF	ADD_SPELL_EFFECT	INT_VAR	opcode = 309	target = 1 timing = 1 parameter1 = 0 - 1 parameter2 = 1	STR_VAR	resource = EVAL ~%prefix%LV%i%~	END
					END
					READ_LONG	0x1e	flag	READ_LONG	0x34	level
					PATCH_IF	level > 0 AND level <= maxlevel	BEGIN
						PATCH_IF	(flag BAND exclude) = 0	BEGIN
							INNER_ACTION	BEGIN
								APPEND	~%resref%X.2DA~	~Default			%SOURCE_RES%	3~
							END
						END
					END
				END
			BUT_ONLY
		END
		COPY_EXISTING	~%spelltable%.2DA~	override
			COUNT_2DA_COLS	cols	READ_2DA_ENTRIES_NOW	~READ_KNOWN~	cols
			TEXT_SPRINT	else1	~~	TEXT_SPRINT	text	~~
			FOR	(i = 1; i < cols; ++i)	BEGIN
				TEXT_SPRINT	text	~~~~~%text%%else1%if currentSpellLevel == %i% and level >~~~~~
				FOR	(j = 0; j < READ_KNOWN; ++j)	BEGIN
					READ_2DA_ENTRY_FORMER	~READ_KNOWN~	j i value
					PATCH_IF	value > 0	BEGIN
						READ_2DA_ENTRY_FORMER	~READ_KNOWN~	j 0 level	--level
						SET	j = READ_KNOWN	SET	old = value - 1
						TEXT_SPRINT	text	~~~~~%text% %level% then%WNL%%TAB%%TAB%%TAB%~~~~~
					END
				END
				TEXT_SPRINT	else2	~~
				FOR	(j = 0; j < READ_KNOWN; ++j)	BEGIN
					READ_2DA_ENTRY_FORMER	~READ_KNOWN~	j i value
					PATCH_IF	old < value	BEGIN
						READ_2DA_ENTRY_FORMER	~READ_KNOWN~	j 0 level
						PATCH_IF	old > 0	BEGIN
							TEXT_SPRINT	text	~~~~~%text%%else2%if level < %level% then; num = %old%;~~~~~
							TEXT_SPRINT	else2	~ else~
						END
						SET	old = value
					END
				END
				TEXT_SPRINT	text	~~~~~%text% else; num = %value% end%WNL%%TAB%%TAB%~~~~~
				TEXT_SPRINT	else1	~else~
			END
			TEXT_SPRINT	text	~~~~~%text%end~~~~~
			TEXT_SPRINT	progression ~%text%~
		ACTION_IF	~%function%~	STRING_EQUAL	~~	BEGIN
			ACTION_IF	!FILE_CONTAINS_EVALUATED (~M_SQMENU.LUA~ ~function SequencerMenu%spelltable%(multi)~)	BEGIN
				APPEND	~M_SQMENU.LUA~	~~~~~
	function SequencerMenuSpellsKnown%spelltable%(multi)
		local	temp = {};	local	unknown = {};	local known = 0;	local num = 0;
		if multi ~= 0 then
			if mageScreen:SpellSwappedInContingency(contingencyResRef) then
				local SwapTable = contingencySwapTable
				for k,v in pairs (SwapTable) do
					if mageScreen:SpellSwappedInContingency(v.resref) then
						for x,y in pairs (contingencySwapTable) do
							if y.level == %currentLevel% then
								unknown[y.resref] = y
							end
						end
					end
				end
			end
		else
			if mageScreen:SpellSwappedInContingency(contingencyResRef) then
				for k,v in pairs (contingencySwapTable) do
					if v.level == %currentLevel% then
						unknown[v.resref] = v
					end
				end
			end
		end
		if characters[id].priestSpells[%currentLevel%] ~= nil then
			for k,v in pairs (characters[id].priestSpells[%currentLevel%]) do
				if unknown[v.resref] ~= nil then
					unknown[v.resref] = nil
					known = known + 1
				end
			end
		end
		if characters[id].mageSpells[%currentLevel%] ~= nil then
			for k,v in pairs (characters[id].mageSpells[%currentLevel%]) do
				if unknown[v.resref] ~= nil then
					unknown[v.resref] = nil
					known = known + 1
				end
			end
		end
		local level = characters[id].level.current
		%progression%
		for k,v in pairs (unknown) do;	table.insert(temp, v);	end
		table.sort(temp,function(a,b) return a.resref < b.resref end)
		for k,v in ipairs (temp) do
			if known < num then
				v.resref = v.resref .. 'L'
			else
				v.resref = 'M_SQMENU'
			end
		end
		SequencerMenuKnown = known
		SequencerMenuTotal = num
		return temp
	end~~~~~
			END
		END	ELSE	BEGIN
			APPEND	~M_SQMENU.LUA~	~~~~~
	function SequencerMenuSpellsKnown%spelltable%(multi)
%function%
	end~~~~~
		END
	APPEND	~M_SQMENU.LUA~	~~~~~SequencerMenu['%resref%X'] = function(); bookSpells = SequencerMenuSpellsKnown%spelltable%(%multilist%); end~~~~~
	END
	