INCLUDE ~%MOD_FOLDER%/lib/replace_multiline.tpa~

OUTER_SET Shadow_Adept_IDSNO = IDS_OF_SYMBOL (~kit~ ~C0SADEPT~)
OUTER_SET Shadow_Disciple_IDSNO = IDS_OF_SYMBOL (~kit~ ~C0SASORC~)
OUTER_SET Nightsinger_IDSNO = IDS_OF_SYMBOL (~kit~ ~C0SABARD~)
OUTER_SET Shade_Warrior_IDSNO = IDS_OF_SYMBOL (~kit~ ~C0SAFM~)
OUTER_SET Nightbringer_IDSNO = IDS_OF_SYMBOL (~kit~ ~C0SACM~)
OUTER_SET Dark_Justiciar_IDSNO = IDS_OF_SYMBOL (~kit~ ~C0SAFMC~)
  
COPY ~%MOD_FOLDER%/lua/m_c0sas1.lua~      ~override~ // Lua file read by EEex, provided by Bubbs and further edited by myself
///////////////////////////////////////////////////////////////////////////
// Update lua file                                                       //
///////////////////////////////////////////////////////////////////////////
  LPF REPLACE_MULTILINE
    INT_VAR
    strict = 1
    verbose = 0
    STR_VAR
    pattern = ~~~~~Shadow_Adept_IDS~~~~~
    string = EVAL ~~~~~%Shadow_Adept_IDSNO%~~~~~ //"
  END
  LPF REPLACE_MULTILINE
    INT_VAR
    strict = 1
    verbose = 0
    STR_VAR
    pattern = ~~~~~Shadow_Disciple_IDS~~~~~
    string = EVAL ~~~~~%Shadow_Disciple_IDSNO%~~~~~ //"
  END
  LPF REPLACE_MULTILINE
    INT_VAR
    strict = 1
    verbose = 0
    STR_VAR
    pattern = ~~~~~Nightsinger_IDS~~~~~
    string = EVAL ~~~~~%Nightsinger_IDSNO%~~~~~ //"
  END
  LPF REPLACE_MULTILINE
    INT_VAR
    strict = 1
    verbose = 0
    STR_VAR
    pattern = ~~~~~Shade_Warrior_IDS~~~~~
    string = EVAL ~~~~~%Shade_Warrior_IDSNO%~~~~~ //"
  END
  LPF REPLACE_MULTILINE
    INT_VAR
    strict = 1
    verbose = 0
    STR_VAR
    pattern = ~~~~~Nightbringer_IDS~~~~~
    string = EVAL ~~~~~%Nightbringer_IDSNO%~~~~~ //"
  END
  LPF REPLACE_MULTILINE
    INT_VAR
    strict = 1
    verbose = 0
    STR_VAR
    pattern = ~~~~~Dark_Justiciar_IDS~~~~~
    string = EVAL ~~~~~%Dark_Justiciar_IDSNO%~~~~~ //"
  END

COPY_EXISTING ~thiefscl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SADEPT" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 100
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 100
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~thiefscl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SASORC" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 100
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 100
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~thiefscl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SABARD" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 100
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 100
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~thiefscl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SAFM" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 100
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 100
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~thiefscl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SACM" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 100
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 100
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~thiefscl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SAFMC" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 100
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 100
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~clasiskl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SADEPT" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 20
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 20
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~clasiskl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SASORC" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 20
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 20
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~clasiskl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SABARD" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 20
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 20
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~clasiskl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SAFM" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 20
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 20
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~clasiskl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SACM" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 20
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 20
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~clasiskl.2da~ ~override~
  REPLACE_TEXTUALLY ~^\([ %TAB%]*MAGE\)~ ~CD_DELETE_ME \1~ // adding column to header column
  COUNT_2DA_COLS col_count
  FOR (col = 1 ; col < col_count ; ++col) BEGIN
    READ_2DA_ENTRY 0 col col_count kit
    PATCH_IF ("%kit%" STRING_COMPARE_CASE "C0SAFMC" = 0) BEGIN
      READ_2DA_ENTRY 4 col col_count val
      SET_2DA_ENTRY  4 col col_count 20
      READ_2DA_ENTRY 5 col col_count val
      SET_2DA_ENTRY  5 col col_count 20
      SET col = col_count // kill loop
    END
  END  
  REPLACE_TEXTUALLY ~CD_DELETE_ME ~ ~~ // removing it
  PRETTY_PRINT_2DA
  BUT_ONLY
  
COPY_EXISTING ~C0SADEPT.2DA~ OVERRIDE
  // Borrowed from Rogue Rebalancing
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 2 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 3 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 4 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 5 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 6 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 7 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 8 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 9 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 10 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 11 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 12 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 13 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 14 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 15 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 16 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 17 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 18 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 19 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 20 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  PRETTY_PRINT_2DA
BUT_ONLY
COPY_EXISTING ~C0SADEP3.2DA~ OVERRIDE
  // Borrowed from Rogue Rebalancing
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 2 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 3 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 4 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 5 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 6 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 7 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 8 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 9 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 10 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 11 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 12 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 13 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 14 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 15 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 16 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 17 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 18 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 19 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 20 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  PRETTY_PRINT_2DA
BUT_ONLY

COPY_EXISTING ~C0SABARD.2DA~ OVERRIDE
  // Borrowed from Rogue Rebalancing
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 1 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 2 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 3 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 4 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 5 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 6 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 7 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 8 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 9 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 10 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 11 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 12 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 13 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 14 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 15 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 16 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 17 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 18 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 19 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  LPF set_clab_2da_entries INT_VAR f_MinLevel = 20 f_MaxLevel = 50 STR_VAR f_Entry = AP_C0SASKL END // STEALTH POINTS
  PRETTY_PRINT_2DA
BUT_ONLY

///////////////////////////////////////////////////////////////////////////
// Update Kit Descriptions                                               //
///////////////////////////////////////////////////////////////////////////
ACTION_FOR_EACH description IN 
    clastext  
  BEGIN
    ACTION_IF FILE_EXISTS_IN_GAME ~%description%.2da~ BEGIN
      COPY_EXISTING ~%description%.2DA~ ~override~
      COUNT_2DA_COLS col_count
      COUNT_2DA_ROWS col_count rows
      FOR (index = 0; index < rows; ++index) BEGIN
        READ_2DA_ENTRY index 0 col_count row_name
//SHADOW ADEPT
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0SADEPT" BEGIN
          READ_2DA_ENTRY index 4 col_count shadow_adept_desc
          SPRINT old_shadow_adept ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.~
          SPRINT new_shadow_adept ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.
– May use the Hide In Shadows ability.~
          GET_STRREF %shadow_adept_desc% shadow_adept_text
          INNER_PATCH_SAVE shadow_adept_text ~%shadow_adept_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_shadow_adept%~ ~%new_shadow_adept%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%shadow_adept_desc%~ ~%shadow_adept_text%~
          END
		END
//SHADOW DISCIPLE
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0SASORC" BEGIN
          READ_2DA_ENTRY index 4 col_count shadow_disciple_desc
          SPRINT old_shadow_disciple ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.~
          SPRINT new_shadow_disciple ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.
– May use the Hide In Shadows ability.~
          GET_STRREF %shadow_disciple_desc% shadow_disciple_text
          INNER_PATCH_SAVE shadow_disciple_text ~%shadow_disciple_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_shadow_disciple%~ ~%new_shadow_disciple%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%shadow_disciple_desc%~ ~%shadow_disciple_text%~
          END
		END
//NIGHTSINGER
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0SABARD" BEGIN
          READ_2DA_ENTRY index 4 col_count nightsinger_desc
          SPRINT old_nightsinger ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.~
          SPRINT new_nightsinger ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.
– May use the Hide In Shadows ability.~
          GET_STRREF %nightsinger_desc% nightsinger_text
          INNER_PATCH_SAVE nightsinger_text ~%nightsinger_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_nightsinger%~ ~%new_nightsinger%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%nightsinger_desc%~ ~%nightsinger_text%~
          END
		END
//SHADE WARRIOR
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0SASORC" BEGIN
          READ_2DA_ENTRY index 4 col_count shade_warrior_desc
          SPRINT old_shade_warrior ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.~
          SPRINT new_shade_warrior ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.
– May use the Hide In Shadows ability.~
          GET_STRREF %shade_warrior_desc% shade_warrior_text
          INNER_PATCH_SAVE shade_warrior_text ~%shade_warrior_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_shade_warrior%~ ~%new_shade_warrior%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%shade_warrior_desc%~ ~%shade_warrior_text%~
          END
		END
//NIGHTBRINGER
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0SASORC" BEGIN
          READ_2DA_ENTRY index 4 col_count nightbringer_desc
          SPRINT old_nightbringer ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.~
          SPRINT new_nightbringer ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.
– May use the Hide In Shadows ability.~
          GET_STRREF %nightbringer_desc% nightbringer_text
          INNER_PATCH_SAVE nightbringer_text ~%nightbringer_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_nightbringer%~ ~%new_nightbringer%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%nightbringer_desc%~ ~%nightbringer_text%~
          END
		END
//DARK JUSTICIAR
        PATCH_IF "%row_name%" STRING_EQUAL_CASE "C0SASORC" BEGIN
          READ_2DA_ENTRY index 4 col_count dark_justiciar_desc
          SPRINT old_dark_justiciar ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.~
          SPRINT new_dark_justiciar ~– Darkvision: The shadow adept is gifted with the ability to see better in darkness than in light, gaining permanent Infravision and immunity to blindness.
– May use the Hide In Shadows ability.~
          GET_STRREF %dark_justiciar_desc% dark_justiciar_text
          INNER_PATCH_SAVE dark_justiciar_text ~%dark_justiciar_text%~ BEGIN
            REPLACE_TEXTUALLY ~%old_dark_justiciar%~ ~%new_dark_justiciar%~
          END
          INNER_ACTION BEGIN
            STRING_SET_EVALUATE ~%dark_justiciar_desc%~ ~%dark_justiciar_text%~
          END
		END
		
		
      END
      BUT_ONLY
    END
  END
  